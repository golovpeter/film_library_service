// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actor/change": {
            "post": {
                "description": "Change actor data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/change_actor_data.ChangeActorDataIn"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/actor/create": {
            "post": {
                "description": "Creating new actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create_actor.CreateActorIn"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/create_actor.CreateActorOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/actor/delete": {
            "delete": {
                "description": "Delete actor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delete_actor.DeleteActorIn"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/actors": {
            "get": {
                "description": "Get all actors with films",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get_all_actors.ActorData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/film/change": {
            "post": {
                "description": "Change film data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/change_film_data.ChangeFilmIn"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/film/create": {
            "post": {
                "description": "Insert new film",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create_film.CreatFilmIn"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/create_film.CreateFilmOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/film/delete": {
            "delete": {
                "description": "Delete all data about film",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delete_film.DeleteFilmIn"
                        }
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/film/find": {
            "get": {
                "description": "Find film by title or actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search field",
                        "name": "search_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Searched value",
                        "name": "value",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/find_film.FilmData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/films": {
            "get": {
                "description": "Get all sorted films",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Films"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sorted field",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/get_sorted_films.FilmData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login in service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login_user.UserDataIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/login_user.UserDataOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register in service",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/register_user.UserDataIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOut"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "change_actor_data.ChangeActorDataIn": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1976-05-25"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "id": {
                    "type": "integer",
                    "example": 10
                },
                "name": {
                    "type": "string",
                    "example": "Cillian Murphy"
                }
            }
        },
        "change_film_data.ChangeFilmIn": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Leonardo Dicaprio"
                    ]
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "id": {
                    "type": "integer",
                    "example": 3
                },
                "rating": {
                    "type": "integer",
                    "example": 10
                },
                "release_date": {
                    "type": "string",
                    "example": "1998-02-20"
                },
                "title": {
                    "type": "string",
                    "example": "Titanic"
                }
            }
        },
        "common.ErrorOut": {
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "create_actor.CreateActorIn": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1976-05-25"
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "name": {
                    "type": "string",
                    "example": "Cillian Murphy"
                }
            }
        },
        "create_actor.CreateActorOut": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "create_film.CreatFilmIn": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Leonardo Dicaprio"
                    ]
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "rating": {
                    "type": "integer",
                    "example": 10
                },
                "release_date": {
                    "type": "string",
                    "example": "1998-02-20"
                },
                "title": {
                    "type": "string",
                    "example": "Titanic"
                }
            }
        },
        "create_film.CreateFilmOut": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "delete_actor.DeleteActorIn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "delete_film.DeleteFilmIn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "find_film.FilmData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "id": {
                    "type": "integer",
                    "example": 10
                },
                "rating": {
                    "type": "integer",
                    "example": 10
                },
                "release_date": {
                    "type": "string",
                    "example": "1998-02-20"
                },
                "title": {
                    "type": "string",
                    "example": "Titanic"
                }
            }
        },
        "get_all_actors.ActorData": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1995-03-23"
                },
                "films": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Titanic",
                        "The Revenant"
                    ]
                },
                "gender": {
                    "type": "string",
                    "example": "male"
                },
                "id": {
                    "type": "integer",
                    "example": 10
                },
                "name": {
                    "type": "string",
                    "example": "Leonardo Dicaprio"
                }
            }
        },
        "get_sorted_films.FilmData": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Leonardo Dicaprio"
                    ]
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "id": {
                    "type": "integer",
                    "example": 10
                },
                "rating": {
                    "type": "integer",
                    "example": 10
                },
                "release_date": {
                    "type": "string",
                    "example": "1998-02-20"
                },
                "title": {
                    "type": "string",
                    "example": "Titanic"
                }
            }
        },
        "login_user.UserDataIn": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "login_user.UserDataOut": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "token"
                }
            }
        },
        "register_user.UserDataIn": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Film library service",
	Description:      "API on Golang for film library service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
